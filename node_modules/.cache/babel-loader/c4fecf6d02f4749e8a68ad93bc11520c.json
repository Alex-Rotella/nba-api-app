{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arote\\\\OneDrive\\\\Desktop\\\\nba\\\\nba_app\\\\src\\\\TeamStats.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PlayerStats extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.getTeams();\n    };\n\n    this.handleChange = event => {\n      const replace = event.target.value.split(\" \").join(\"_\");\n\n      if (replace.length > 0) {\n        this.setState({\n          teamName: replace\n        });\n      } else {\n        alert(\"Please type players name!\");\n      }\n    };\n\n    this.getTeams = () => {\n      axios.get(`https://www.balldontlie.io/api/v1/teams/`).then(async res => {\n        const result = res.data.data;\n        this.setState({\n          teams: result\n        });\n        console.log(\"team name\");\n        console.log(this.state.teamName);\n        console.log(\"teams\");\n        console.log(this.state.teams);\n        await this.getTeamInfo();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.getTeamInfo = () => {\n      var found = false;\n\n      for (let i = 0; i < this.state.teams.length; i++) {\n        if (this.state.teams[i].full_name.toUpperCase().includes(this.state.teamName.toUpperCase())) {\n          found = true;\n          const abrv = this.state.teams[i].abbreviation;\n          this.setState({\n            abbreviation: abrv\n          });\n          const conf = this.state.teams[i].conference;\n          this.setState({\n            conference: conf\n          });\n          const name = this.state.teams[i].full_name;\n          this.setState({\n            full_name: name\n          });\n          const div = this.state.teams[i].division;\n          this.setState({\n            division: div\n          });\n          const ID = this.state.teams[i].id;\n          this.setState({\n            id: ID\n          });\n        }\n      }\n\n      if (!found) {\n        alert(\"Be sure to check your spelling!\");\n      }\n    };\n\n    this.state = {\n      teamName: null,\n      teams: [],\n      abbreviation: null,\n      conference: null,\n      division: null,\n      full_name: null,\n      id: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Enter a Team's name to see their info!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Team Name\\xA0\\xA0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.value,\n          onChange: this.handleChange,\n          placeholder: \"please enter players name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }, this), \"Full Name: \", this.state.full_name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this), \"Abbreviation: \", this.state.abbreviation, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }, this), \"Conference: \", this.state.conference, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, this), \"Division: \", this.state.division, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }, this), \"API Team ID: \", this.state.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default PlayerStats;","map":{"version":3,"sources":["C:/Users/arote/OneDrive/Desktop/nba/nba_app/src/TeamStats.js"],"names":["React","Component","axios","PlayerStats","constructor","props","handleSubmit","e","preventDefault","getTeams","handleChange","event","replace","target","value","split","join","length","setState","teamName","alert","get","then","res","result","data","teams","console","log","state","getTeamInfo","catch","err","found","i","full_name","toUpperCase","includes","abrv","abbreviation","conf","conference","name","div","division","ID","id","render"],"mappings":"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","sourcesContent":["\r\n\r\n\r\nimport React, {Component} from 'react';\r\nimport axios from \"axios\";\r\n\r\n\r\nclass PlayerStats extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n    teamName: null,\r\n    teams: [],\r\n    abbreviation: null,\r\n    conference: null,\r\n    division: null,\r\n    full_name: null,\r\n    id: null,\r\n\r\n    }\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.getTeams()\r\n    \r\n \r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const replace = event.target.value.split(\" \").join(\"_\");\r\n    if(replace.length > 0){\r\n      this.setState({teamName: replace})\r\n      \r\n\r\n    } else {\r\n      alert(\"Please type players name!\")\r\n    }\r\n  }\r\n\r\n\r\n  getTeams = () => {\r\n    axios.get(`https://www.balldontlie.io/api/v1/teams/`)\r\n    .then(async res => {\r\n      \r\n      const result = res.data.data;\r\n      this.setState({teams: result})\r\n      console.log(\"team name\")\r\n      console.log(this.state.teamName)\r\n      console.log(\"teams\")\r\n      console.log(this.state.teams)\r\n      await this.getTeamInfo()\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n    \r\n  }\r\n\r\n  getTeamInfo = () => {\r\n      var found = false\r\n      for(let i = 0; i < this.state.teams.length; i++)\r\n      {\r\n          \r\n        if(this.state.teams[i].full_name.toUpperCase().includes(this.state.teamName.toUpperCase()) )\r\n        {\r\n            found = true;\r\n\r\n            const abrv = this.state.teams[i].abbreviation\r\n            this.setState({abbreviation: abrv})\r\n            const conf = this.state.teams[i].conference\r\n            this.setState({conference: conf})\r\n            const name = this.state.teams[i].full_name\r\n            this.setState({full_name: name})\r\n            const div = this.state.teams[i].division\r\n            this.setState({division: div})\r\n            const ID = this.state.teams[i].id\r\n            this.setState({id: ID})\r\n\r\n         }\r\n         \r\n    }\r\n    if(!found)\r\n    {\r\n        alert(\"Be sure to check your spelling!\")\r\n    }\r\n  }\r\n\r\n  \r\n  \r\n  render(){\r\n  return (\r\n\r\n    <div className=\"App\">\r\n              \r\n              <h3>Enter a Team's name to see their info!</h3>\r\n              \r\n    <form onSubmit={this.handleSubmit}>\r\n                <label>Team Name&nbsp;&nbsp;</label>\r\n    \r\n                <input \r\n                type=\"text\"\r\n                value={this.state.value}\r\n                onChange={this.handleChange}\r\n                placeholder=\"please enter players name\"\r\n                />\r\n\r\n       <input type=\"submit\" value=\"Submit\"/>\r\n     </form>\r\n    <br />\r\n    Full Name: {this.state.full_name}\r\n    <br />\r\n    Abbreviation: {this.state.abbreviation}\r\n    <br />\r\n    Conference: {this.state.conference}\r\n    <br />\r\n    Division: {this.state.division}\r\n    <br />\r\n    API Team ID: {this.state.id}\r\n\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default PlayerStats;\r\n"]},"metadata":{},"sourceType":"module"}